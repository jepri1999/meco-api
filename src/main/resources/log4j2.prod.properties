status = info

# Console log
appender.console.type = Console
appender.console.name = LogToConsole
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = %style{%d{ISO8601}}{black} %highlight{%-5level }[%style{%t}{bright,blue}] %style{%C{1.}}{bright,yellow}: %msg%n%throwable

# Rotate log file
appender.rolling.type = RollingFile
appender.rolling.name = LogToRollingFile
appender.rolling.fileName = meco/logs/app.log
appender.rolling.filePattern = meco/logs/$${date:yyyy-MM}/app-%d{MM-dd-yyyy}-%i.log.gz
appender.rolling.layout.type = JsonLayout
appender.rolling.layout.compact=true
appender.rolling.layout.complete=false
appender.rolling.layout.eventEol=true
appender.rolling.layout.objectMessageAsJsonObject=true
appender.rolling.layout.pattern = %d %p %C{1.} [%t] %m%n
appender.rolling.policies.type = Policies
appender.rolling.policies.startup.type = OnStartupTriggeringPolicy
appender.rolling.policies.size.type = SizeBasedTriggeringPolicy
appender.rolling.policies.size.size=10MB
appender.rolling.policies.time.type = TimeBasedTriggeringPolicy

# Log to console and rolling file
logger.app.name = uk.thepragmaticdev
logger.app.level = info
logger.app.additivity = false
logger.app.appenderRef.console.ref = LogToConsole
logger.app.appenderRef.rolling.ref = LogToRollingFile

rootLogger.level = info
rootLogger.appenderRef.stdout.ref = LogToConsole